{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport '../css/timer.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst selectedDate = document.querySelector('#datetime-picker');\nconst spanDays = document.querySelector(`[data-days]`);\nconst spanHours = document.querySelector(`[data-hours]`);\nconst spanMinutes = document.querySelector(`[data-minutes]`);\nconst spanSeconds = document.querySelector(`[data-seconds]`);\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', onClick);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nconst timer = {\n  start() {\n    const id = setInterval(() => {\n      const currentTime = new Date();\n      const ms = fp.selectedDates[0] - currentTime;\n      const { days, hours, minutes, seconds } = convertMs(ms);\n\n      convertMs(ms);\n\n      if (ms < 1000) {\n        clearInterval(id);\n        selectedDate.disabled = false;\n      }\n\n      spanDays.textContent = pad(days);\n      spanHours.textContent = pad(hours);\n      spanMinutes.textContent = pad(minutes);\n      spanSeconds.textContent = pad(seconds);\n    }, 1000);\n  },\n};\n\nfunction onClick() {\n  startBtn.disabled = true;\n  selectedDate.disabled = true;\n\n  timer.start();\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","selectedDate","spanDays","spanHours","spanMinutes","spanSeconds","onClick","options","selectedDates","iziToast","fp","flatpickr","timer","id","currentTime","ms","days","hours","minutes","seconds","convertMs","pad","value"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAe,SAAS,cAAc,kBAAkB,EACxDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DL,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASM,CAAO,EAE1C,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,KAAK,IAAG,GAC9BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEMU,EAAKC,EAAU,mBAAoBJ,CAAO,EAE1CK,EAAQ,CACZ,OAAQ,CACN,MAAMC,EAAK,YAAY,IAAM,CAC3B,MAAMC,EAAc,IAAI,KAClBC,EAAKL,EAAG,cAAc,CAAC,EAAII,EAC3B,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAIlDA,EAAK,MACP,cAAcF,CAAE,EAChBZ,EAAa,SAAW,IAG1BC,EAAS,YAAcmB,EAAIL,CAAI,EAC/Bb,EAAU,YAAckB,EAAIJ,CAAK,EACjCb,EAAY,YAAciB,EAAIH,CAAO,EACrCb,EAAY,YAAcgB,EAAIF,CAAO,CACtC,EAAE,GAAI,CACR,CACH,EAEA,SAASb,GAAU,CACjBN,EAAS,SAAW,GACpBC,EAAa,SAAW,GAExBW,EAAM,MAAK,CACb,CAEA,SAASQ,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}